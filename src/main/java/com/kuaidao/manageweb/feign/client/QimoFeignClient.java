package com.kuaidao.manageweb.feign.client;import com.kuaidao.aggregation.dto.client.*;import com.kuaidao.callcenter.dto.QimoOutboundCallDTO;import com.kuaidao.callcenter.dto.QimoOutboundCallRespDTO;import com.kuaidao.callcenter.dto.TrAxbOutCallReqDTO;import com.kuaidao.common.constant.SysErrorCodeEnum;import com.kuaidao.common.entity.IdEntity;import com.kuaidao.common.entity.IdListReq;import com.kuaidao.common.entity.JSONResult;import com.kuaidao.common.entity.PageBean;import com.kuaidao.sys.dto.user.UserInfoReq;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.cloud.openfeign.FeignClient;import org.springframework.stereotype.Component;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import javax.validation.Valid;import java.util.List;/** * 坐席管理 *  * @author Chen Chengxue * @date: 2019年1月3日 下午5:06:37 * @version V1.0 */@FeignClient(name = "callcenter-service", path = "/callcenter/qimoClient",fallback = QimoFeignClient.HystrixClientFallback.class)public interface QimoFeignClient {    /**     * 保存七陌坐席     *      * @param reqDTO     * @return     */    @PostMapping("/saveQimoClient")    JSONResult<Boolean> saveQimoClient(@RequestBody AddOrUpdateQimoClientDTO reqDTO);    /**     * 更新七陌坐席     *      * @param reqDTO     * @param result     * @return     */    @PostMapping("/updateQimoClient")    JSONResult<Boolean> updateQimoClient(@RequestBody AddOrUpdateQimoClientDTO reqDTO);    /**     * 删除七陌坐席 ，根据ID list     *      * @param idListReq     * @return     */    @PostMapping("/deleteQimoClient")    JSONResult<Boolean> deleteQimoClient(@RequestBody IdListReq idListReq);    /**     * 根据Id 查询七陌坐席     *      * @param idEntity     * @return     */    @PostMapping("/queryQimoClientById")    JSONResult<QimoClientRespDTO> queryQimoClientById(@RequestBody IdEntity idEntity);    /**     * 根据参数查询数据 精确匹配     *      * @param queryDTO     * @return     */    @PostMapping("/queryQimoClientByParam")    JSONResult<QimoClientRespDTO> queryQimoClientByParam(@RequestBody QimoClientQueryDTO queryDTO);    /**     * 分页查询天润坐席     *      * @param queryClientDTO     * @return     */    @PostMapping("/listQimoClientPage")    JSONResult<PageBean<QimoDataRespDTO>> listQimoClientPage(            @RequestBody QueryQimoDTO queryClientDTO);    @PostMapping("/uploadTrClientData")    JSONResult<List<ImportTrClientDTO>> uploadTrClientData(            @RequestBody UploadTrClientDataDTO reqClientDataDTO);    /**     * 上传七陌坐席数据     *      * @param reqClientDataDTO     * @return     */    @PostMapping("/uploadQimoClientData")    JSONResult<List<ImportQimoClientDTO>> uploadQimoClientData(            UploadTrClientDataDTO<ImportQimoClientDTO> reqClientDataDTO);    /**     * 根据坐席账号查询可用的 七陌坐席     *      * @param loginClint 登录坐席     * @return     */    @PostMapping("/queryQimoClientByLoginClient")    JSONResult<QimoClientRespDTO> queryQimoClientByLoginClient(@RequestBody String loginClint);    /**     * 七陌坐席外呼     *      * @param callDTO     * @return     */    @PostMapping("/qimoOutboundCall")    JSONResult<QimoOutboundCallRespDTO> qimoOutboundCall(@RequestBody QimoOutboundCallDTO callDTO);    /**     * 根据坐席账号查询可用的 七陌坐席     *      * @param loginClint 登录坐席     * @return     */    @PostMapping("/queryQimoClient")    JSONResult<QimoClientRespDTO> queryQimoClient(            @RequestBody TrAxbOutCallReqDTO trAxbOutCallReqDTO);    @Component    static class HystrixClientFallback implements QimoFeignClient {        private static Logger logger = LoggerFactory.getLogger(QimoFeignClient.class);        private JSONResult fallBackError(String name) {            logger.error(name + "接口调用失败：无法获取目标服务");            return new JSONResult().fail(SysErrorCodeEnum.ERR_REST_FAIL.getCode(),                    SysErrorCodeEnum.ERR_REST_FAIL.getMessage());        }        @Override        public JSONResult<Boolean> saveQimoClient(AddOrUpdateQimoClientDTO reqDTO) {            return fallBackError("保存七陌坐席");        }        @Override        public JSONResult<Boolean> updateQimoClient(AddOrUpdateQimoClientDTO reqDTO) {            return fallBackError("更新七陌坐席");        }        @Override        public JSONResult<Boolean> deleteQimoClient(IdListReq idListReq) {            return fallBackError("删除七陌坐席");        }        @Override        public JSONResult<QimoClientRespDTO> queryQimoClientById(IdEntity idEntity) {            return fallBackError("根据ID查询七陌坐席");        }        @Override        public JSONResult<QimoClientRespDTO> queryQimoClientByParam(QimoClientQueryDTO queryDTO) {            return fallBackError("根据参数查询七陌坐席");        }        @Override        public JSONResult<PageBean<QimoDataRespDTO>> listQimoClientPage(                QueryQimoDTO queryClientDTO) {            return fallBackError("分页查询七陌坐席");        }        @Override        public JSONResult<List<ImportTrClientDTO>> uploadTrClientData(                UploadTrClientDataDTO reqClientDataDTO) {            return fallBackError("上传天润坐席数据");        }        @Override        public JSONResult<List<ImportQimoClientDTO>> uploadQimoClientData(                UploadTrClientDataDTO<ImportQimoClientDTO> reqClientDataDTO) {            return fallBackError("上传七陌坐席数据");        }        @Override        public JSONResult<QimoClientRespDTO> queryQimoClientByLoginClient(String loginClint) {            return fallBackError("根据坐席号查询可用的七陌坐席");        }        @Override        public JSONResult<QimoOutboundCallRespDTO> qimoOutboundCall(QimoOutboundCallDTO callDTO) {            return fallBackError("七陌坐席外呼");        }        @Override        public JSONResult<QimoClientRespDTO> queryQimoClient(                TrAxbOutCallReqDTO trAxbOutCallReqDTO) {            return fallBackError("查询可用的七陌坐席");        }    }}